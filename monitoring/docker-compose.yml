version: "3.5"

# examples
# https://github.com/docker/awesome-compose/

networks:
  sky360:
    driver: bridge

services:
  #sky360-tracker:
  #  image: sky360/simpletracker-ros2:1.0.2
  #  container_name: sky360-tracker
  #  restart: unless-stopped
  #  user: ros:ros
  #  privileged: true
  #  environment:
  #    - FASTDDS_STATISTICS=HISTORY_LATENCY_TOPIC;PUBLICATION_THROUGHPUT_TOPIC;PHYSICAL_DATA_TOPIC
  #  ports:
  #    - 8080:8080
  #    - 7070:7070
  #  networks:
  #    - sky360
  #  network_mode: host
  #  devices:
  #    - /dev/video0:/dev/video0
  #  volumes:
  #    - /dev:/dev
  #    - /tmp/.X11-unix:/tmp/.X11-unix
  #  entrypoint: 
  #    - /home/ros/simpletracker-ros2-ws/setup_build_launch.sh
  #  security_opt:
  #    - seccomp:unconfined
  #    - apparmor:unconfined
  #  cap_add:
  #    - SYS_PTRACE

  #https://grafana.com/docs/grafana-cloud/quickstart/docker-compose-linux/
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    #expose:
    #  - 9100
    ports:
      - 9100:9100
    #networks:
    #  - sky360
    network_mode: host

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    #networks:
    #  - sky360
    network_mode: host
    volumes:
      - prometheus:/prometheus
      - ${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml
    #depends_on:
    #  - sky360-tracker

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    #networks:
    #  - sky360
    network_mode: host
    volumes:
      - grafana:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  node-exporter:
    driver: local
  grafana:
    driver: local
  prometheus:
    driver: local