cmake_minimum_required(VERSION 3.8)
project(simple_tracker_interfaces)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

find_package(sensor_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)

rosidl_generate_interfaces(${PROJECT_NAME}
  #"msg/ConfigEntryUpdated.msg"
  "msg/BoundingBox.msg"
  "msg/BoundingBoxArray.msg"
  "msg/CameraFrame.msg"
  "msg/CenterPoint.msg"
  "msg/ConfigEntryUpdatedArray.msg"
  "msg/ConfigItem.msg"
  "msg/Frame.msg"
  "msg/KeyPoint.msg"
  "msg/KeyPointArray.msg"
  "msg/Track.msg"
  "msg/TrackArray.msg"
  "msg/TrackingState.msg"
  "srv/ConfigEntryUpdate.srv"
  "srv/ConfigEntry.srv"
  "srv/ConfigEntryArray.srv"
  "srv/Mask.srv"
  "srv/MaskUpdate.srv"
  DEPENDENCIES sensor_msgs
)

ament_package()